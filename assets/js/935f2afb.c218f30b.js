"use strict";(self.webpackChunktu_cis_4398_docs_template=self.webpackChunktu_cis_4398_docs_template||[]).push([[53],{1109:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"docsSidebar":[{"type":"link","label":"Introduction","href":"/project-tool-shed/docs/intro","docId":"intro"},{"type":"link","label":"API Specification","href":"/project-tool-shed/docs/api-specification","docId":"api-specification"},{"type":"category","label":"Requirements Specification","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"System Overview","href":"/project-tool-shed/docs/requirements/system-overview","docId":"requirements/system-overview"},{"type":"link","label":"System Block Diagram","href":"/project-tool-shed/docs/requirements/system-block-diagram","docId":"requirements/system-block-diagram"},{"type":"link","label":"General Requirements","href":"/project-tool-shed/docs/requirements/general-requirements","docId":"requirements/general-requirements"},{"type":"link","label":"Features and Requirements","href":"/project-tool-shed/docs/requirements/features-and-requirements","docId":"requirements/features-and-requirements"},{"type":"link","label":"Use-case descriptions","href":"/project-tool-shed/docs/requirements/use-case-descriptions","docId":"requirements/use-case-descriptions"}],"href":"/project-tool-shed/docs/category/requirements-specification"},{"type":"category","label":"Software Development Plan","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Activities","href":"/project-tool-shed/docs/development-plan/activities","docId":"development-plan/activities"},{"type":"link","label":"Tasks","href":"/project-tool-shed/docs/development-plan/tasks","docId":"development-plan/tasks"},{"type":"link","label":"Schedule","href":"/project-tool-shed/docs/development-plan/schedule","docId":"development-plan/schedule"},{"type":"link","label":"Development Environment","href":"/project-tool-shed/docs/development-plan/development-environment","docId":"development-plan/development-environment"},{"type":"link","label":"Version Control","href":"/project-tool-shed/docs/development-plan/version-control","docId":"development-plan/version-control"}],"href":"/project-tool-shed/docs/category/software-development-plan"},{"type":"category","label":"System Architecture","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Design","href":"/project-tool-shed/docs/system-architecture/design","docId":"system-architecture/design"},{"type":"link","label":"Database","href":"/project-tool-shed/docs/system-architecture/database","docId":"system-architecture/database"}],"href":"/project-tool-shed/docs/category/system-architecture"},{"type":"category","label":"Test Procedures","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Integration tests","href":"/project-tool-shed/docs/testing/integration-testing","docId":"testing/integration-testing"},{"type":"link","label":"Acceptance test","href":"/project-tool-shed/docs/testing/acceptence-testing","docId":"testing/acceptence-testing"},{"type":"category","label":"Jest Results","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Coverage","href":"/project-tool-shed/docs/testing/results/coverage","docId":"testing/results/coverage"},{"type":"link","label":"Results","href":"/project-tool-shed/docs/testing/results/","docId":"testing/results/results"}],"href":"/project-tool-shed/docs/category/jest-results"},{"type":"link","label":"Unit Testing","href":"/project-tool-shed/docs/testing/unit-testing","docId":"testing/unit-testing"}],"href":"/project-tool-shed/docs/category/test-procedures"}]},"docs":{"api-specification":{"id":"api-specification","title":"API Specification","description":"JSDoc-generated API docs","sidebar":"docsSidebar"},"development-plan/activities":{"id":"development-plan/activities","title":"Activities","description":"Requirements Gathering","sidebar":"docsSidebar"},"development-plan/development-environment":{"id":"development-plan/development-environment","title":"Development Environment","description":"ToolShed is a JavaScript-based project that effectively utilizes NPM to manage its dependencies. The project is designed to be IDE agnostic, thereby enabling seamless integration with any IDE that is capable of interpreting package.json files. Our objective is to ensure that developers are not constrained to use a specific editor or IDE, as we believe that such an approach is counterproductive.","sidebar":"docsSidebar"},"development-plan/schedule":{"id":"development-plan/schedule","title":"Schedule","description":"Milestone Demos","sidebar":"docsSidebar"},"development-plan/tasks":{"id":"development-plan/tasks","title":"Tasks","description":"Below are sequential tasks with story points below each epic. It should be noted that we will complete story points from multiple different epics within a single sprint. These tasks represent a single demo-able feature that is associated with one or many story points. In general, the more story points, the more complex the task. Our task plan also considers risk, work complexity, and the amount of work new work versus repetition. Although these factors are difficult to nail down, based on our discussions with each other and requirements gathering, these are our best estimates. These estimates also consider that our group has varied experience building web applications; it is expected that collectively we will be using unfamiliar languages and database tools which proves to have a learning curve. The flow for our tasks is planning and prototyping, building out main pages, adding functionality to those pages, and then adding extra features if time permits.","sidebar":"docsSidebar"},"development-plan/version-control":{"id":"development-plan/version-control","title":"Version Control","description":"- GitHub will serve as the version control system for Tool Shed, providing a reliable and widely-used platform for managing source code.","sidebar":"docsSidebar"},"intro":{"id":"intro","title":"Introduction","description":"","sidebar":"docsSidebar"},"requirements/features-and-requirements":{"id":"requirements/features-and-requirements","title":"Features and Requirements","description":"High Level Requirements Overview","sidebar":"docsSidebar"},"requirements/general-requirements":{"id":"requirements/general-requirements","title":"General Requirements","description":"An internet browser that is currently connected to the internet.","sidebar":"docsSidebar"},"requirements/system-block-diagram":{"id":"requirements/system-block-diagram","title":"System Block Diagram","description":"Figure 1. High level technical design of the Tool Shed Website.","sidebar":"docsSidebar"},"requirements/system-overview":{"id":"requirements/system-overview","title":"System Overview","description":"Project Abstract","sidebar":"docsSidebar"},"requirements/use-case-descriptions":{"id":"requirements/use-case-descriptions","title":"Use-case descriptions","description":"Use Case 1  - Searching for Tools","sidebar":"docsSidebar"},"system-architecture/database":{"id":"system-architecture/database","title":"Database","description":"Database Diagrams","sidebar":"docsSidebar"},"system-architecture/design":{"id":"system-architecture/design","title":"Design","description":"Class Diagram","sidebar":"docsSidebar"},"testing/acceptence-testing":{"id":"testing/acceptence-testing","title":"Acceptance test","description":"1. Creating an account","sidebar":"docsSidebar"},"testing/integration-testing":{"id":"testing/integration-testing","title":"Integration tests","description":"1. Use Case 1:","sidebar":"docsSidebar"},"testing/results/coverage":{"id":"testing/results/coverage","title":"Coverage","description":"| File | % Stmts | % Branch | % Funcs | % Lines | Uncovered Lines |","sidebar":"docsSidebar"},"testing/results/results":{"id":"testing/results/results","title":"Results","description":"| &nbsp  |   \\t&#35; |    % |","sidebar":"docsSidebar"},"testing/unit-testing":{"id":"testing/unit-testing","title":"Unit Testing","description":"Unit testing is done via Jest. To create a new set of tests for a file called example.js, you\'d write a file called example.test.js, which would const {exportA, exportB, ...} = require(\\"example.js\\"); and test what it exports.","sidebar":"docsSidebar"}}}')}}]);